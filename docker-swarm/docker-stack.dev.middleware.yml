version: '3.4'

services:
  h2:
    image: vg/h2:latest
    volumes:
    - type: bind
      source: /opt/vg/h2-data
      target: /opt/h2-data
    ports:
    - 8083:8083 # web
    - 9093:9093 # tcp
    - 1235:1235 # JMX Exporter

  zookeeper:
    image: vg/zookeeper:latest
    hostname: zookeeper
    ports:
    - 2181:2181 # clientPort
    - 2888:2888 # peerPort
    - 3888:3888 # leaderPort
    - 1233:1233 # JMX Exporter
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9999 -javaagent:/usr/app/jmx_prometheus_javaagent.jar=1233:/usr/app/prometheus.yml'
      KAFKA_JMX_PORT: 9999
    extra_hosts:
    - "moby:127.0.0.1"

  kafka:
    image: vg/kafka:latest
    hostname: kafka
    ports:
    - 9092 #TODO назначение
    - 1234:1234 # JMX Exporter
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9999 -javaagent:/opt/prometheus/jmx_prometheus_javaagent.jar=1234:/opt/prometheus/prometheus.yml'
    depends_on:
    - zookeeper
    extra_hosts:
    - "moby:127.0.0.1"

  kafka-schema-registry:
    image: vg/kafka-schema-registry:latest
    hostname: kafka_schema_registry
    ports:
    - '18081:18081'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:18081
    depends_on:
    - zookeeper
    - kafka
    extra_hosts:
    - "moby:127.0.0.1"

  grafana:
    image: vg/grafana:latest
    ports:
    - "3000:3000"
    environment:
    - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
    - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
    - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    image: vg/prometheus:latest
    ports:
    - "9090:9090"
    volumes:
    - prometheus:/prometheus
    #      - ./.dev/prometheus_data:/prometheus
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

volumes:
  prometheus: {}
  #  prometheus:
  #    source: ./.dev/prometheus_data
  grafana: {}
